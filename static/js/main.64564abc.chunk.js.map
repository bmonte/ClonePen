{"version":3,"sources":["components/Editor.tsx","hooks/useLocalStorage.tsx","pages/Pen/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["Editor","displayName","language","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lineNumbers","lint","mode","theme","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","Pen","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","Routes","path","exact","component","App","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAuDeA,EApCuB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC5DC,oBAAS,GADmD,mBAC7EC,EAD6E,KACvEC,EADuE,KAOpF,OACE,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC9C,yBAAKE,UAAU,gBACZP,EACD,4BACEQ,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OAEpC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAIlD,kBAAC,aAAD,CACEC,eAlBN,SAAsBC,EAAgBC,EAAcd,GAClDC,EAASD,IAkBLA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACPC,cAAc,EACdC,aAAa,EACbC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,gBCpBFC,EAxBS,SAACC,EAAaC,GACpC,IAAMC,EAHO,YAGgBF,EAD6B,EAGhCpB,oBAAS,WACjC,IAAMuB,EAAYC,aAAaC,QAAQH,GAEvC,OAAkB,OAAdC,EACKG,KAAKC,MAAMJ,GAGQ,oBAAjBF,EACFA,IAGFA,KAdiD,mBAGnDvB,EAHmD,KAG5C8B,EAH4C,KAqB1D,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAChD,CAACA,EAAOwB,IAEJ,CAACxB,EAAO8B,ICwCFI,EA5DO,WAAO,IAAD,EACFb,EAAgB,OAAQ,IADtB,mBACnBc,EADmB,KACbC,EADa,OAEJf,EAAgB,MAAO,IAFnB,mBAEnBgB,EAFmB,KAEdC,EAFc,OAGNjB,EAAgB,KAAM,IAHhB,mBAGnBkB,EAHmB,KAGfC,EAHe,OAKEtC,mBAAS,IALX,mBAKnBuC,EALmB,KAKXC,EALW,KAqB1B,OAdAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKlC,UAAU,iBACb,kBAAC,EAAD,CACEN,SAAS,MACTD,YAAY,OACZE,MAAOmC,EACPlC,SAAUmC,IAGZ,kBAAC,EAAD,CACErC,SAAS,MACTD,YAAY,MACZE,MAAOqC,EACPpC,SAAUqC,IAGZ,kBAAC,EAAD,CACEvC,SAAS,aACTD,YAAY,aACZE,MAAOuC,EACPtC,SAAUuC,KAId,yBAAKnC,UAAU,QACb,4BACEoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YC7CFC,EARU,WACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWpB,MCKxBqB,EARO,kBACpB,oCACE,kBAAC,IAAD,CAAeC,SAAUC,aACvB,kBAAC,EAAD,SCHNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.64564abc.chunk.js","sourcesContent":["import 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\n\nimport React, { useState } from 'react';\n\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons';\n\ninterface EditorProps {\n  displayName: string;\n  language: string;\n  value: string;\n  onChange: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst Editor: React.FC<EditorProps> = ({ displayName, language, value, onChange }) => {\n  const [open, setOpen] = useState(true);\n\n  function handleChange(editor: object, data: object, value: string) {\n    onChange(value);\n  }\n\n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen(prevOpen => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n\n      <ControlledEditor \n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lineNumbers: true,\n          lint: true,\n          mode: language,\n          theme: 'material'\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Editor;","import { useState, useEffect } from 'react';\n\nconst PREFIX = 'clonepen-';\n\nconst useLocalStorage = (key: string, initialValue: any) => {\n  const prefixedKey = PREFIX + key;\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    \n    if (jsonValue !== null) {\n      return JSON.parse(jsonValue);\n    }\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    }\n\n    return initialValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [value, prefixedKey]);\n\n  return [value, setValue];\n}\n\nexport default useLocalStorage;","import React, { useState, useEffect } from 'react';\n\nimport Editor from '../../components/Editor';\nimport useLocalStorage from '../../hooks/useLocalStorage';\n\nconst Pen: React.FC = () => {\n  const [html, setHtml] = useLocalStorage('html', '');\n  const [css, setCss] = useLocalStorage('css', '');\n  const [js, setJs] = useLocalStorage('js', '');\n  \n  const [srcDoc, setSrcDoc] = useState('');\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `);\n    }, 1000);\n\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor \n          language=\"xml\" \n          displayName=\"HTML\" \n          value={html}\n          onChange={setHtml}\n        />\n\n        <Editor\n          language=\"css\" \n          displayName=\"CSS\" \n          value={css}\n          onChange={setCss}\n        />\n\n        <Editor \n          language=\"javascript\"\n          displayName=\"JavaScript\" \n          value={js}\n          onChange={setJs}\n        />\n      </div>\n\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Pen;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Pen from '../pages/Pen';\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Pen} />\n    </Switch>\n  );\n}\n\nexport default Routes;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes />\n    </BrowserRouter>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}